# Many of the settings used here are directly connected to their command line
# counterparts, see "ds4drv --help" for more information about available options.

##
# Global options
##
[ds4drv]
# Run ds4drv in background as a daemon
#daemon = true

# Location of the log file in daemon mode
#daemon-log = ~/.cache/ds4drv.log

# Location of the PID file in daemon mode
#daemon-pid = /tmp/ds4drv.pid

# Enable hidraw mode
#hidraw = true


##
# Controller settings
#
# This is the default profile for each controller.
# Multiple controllers slots are defined by increasing the number.
#
# Controller sections contain:
#  Key: A option, these are the same options that can used on the command line
#       but without the "--" prefix.
#  Value: The option's value, should be "true" if no value is needed.
#
# See "ds4drv --help" for a complete list of available options.
##
[controller:1]
# Enables LED flash on low battery
#battery-flash = true

# Sets LED color
#led = 0000ff

# Enables profile switching
#profile-toggle = PS

# Profiles to cycle through
#profiles = xpad,kbmouse


##
# Profiles
#
# Profiles allows switching controller settings during runtime.
#
# Profile sections always require a name and are then enabled on a controller
# with "profiles = <profile1>[,<profile2>]".
#
# The same settings available for controllers are used here.
##
[profile:bb]

# Custom button mapping
mapping = bbmap

# Custom action bindings
bindings = exec_stuff

##
# Mappings
#
# Mappings let you map buttons and sticks to mouse, key and joystick events.
#
# Mapping sections always require a name and are then enabled in a profile
# with "mapping = <name>".
#
# Mapping sections contain:
#  Key: A Linux input event, see /usr/include/linux/input-event-codes.h for a complete list
#  Value: Button on the DS4, use --dump-reports to see all the available buttons
##

[mapping:bbmap]
# General button to key mapping
ABS_X = left_analog_x
ABS_Y = left_analog_y
ABS_RX = right_analog_x
ABS_RY = right_analog_y
ABS_Z = l2_analog
ABS_RZ = r2_analog
ABS_THROTTLE = orientation_roll
ABS_RUDDER = orientation_pitch
ABS_WHEEL = orientation_yaw
ABS_DISTANCE = motion_z
ABS_TILT_X = motion_x
ABS_TILT_Y = motion_y

BTN_TL = button_l1
BTN_TR = button_r1
BTN_TL2 = button_l2
BTN_TR2 = button_r2
BTN_THUMBL = button_l3
BTN_THUMBR = button_r3

BTN_NORTH = button_triangle
BTN_SOUTH = button_cross
BTN_EAST = button_circle
BTN_WEST = button_square

BTN_SELECT = button_share
BTN_START = button_options
BTN_MODE = button_ps

BTN_TOUCH = button_trackpad
ABS_HAT0X = dpad_left, dpad_right
ABS_HAT0Y = dpad_up, dpad_down

ABS_MT_POSITION_X = trackpad_touch0_x
ABS_MT_POSITION_Y = trackpad_touch0_y
ABS_MT_TOOL_X = trackpad_touch1_x
ABS_MT_TOOL_Y = trackpad_touch1_y



##
# Bindings
#
# Bindings let you bind button combos to special built-in actions.
#
# Binding sections can be defined with a name and are then enabled in a profile
# with "bindings = <name>".
#
# It's also possible to define a global bindings section that is enabled
# on all profiles.
#
# Sections contains:
#  Key: A button combo
#  Value: An action, see next section for valid actions.
#
#
# Valid actions:
#  next-profile                                  Loads the next profile
#  prev-profile                                  Loads the previous profile
#  load-profile <profile>                        Loads the specified profile
#  exec <command> [arg1] [arg2] ...              Executes the command with
#                                                specified arguments
#  exec-background <command> [arg1] [arg2] ...   Same as exec but launches in
#                                                the background
#
#
# Actions will be pre-processed and replace variables with real values.
#
# Valid variables:
#  $profile                The current profile
#  $name                   Pretty name of the current device
#  $device_addr            Bluetooth address of the device
#  $report.<attribute>     Replace <attribute> with a valid attribute,
#                          use --dump-reports to see which are available
##

[bindings]
# Cycle profiles
#PS+Right = next-profile
#PS+Left = prev-profile

# Go directly to specified profile
#PS+Up = load-profile kbmouse
#PS+Down = load-profile default


#[bindings:exec_stuff]
## Execute a command in the foreground, blocking until it has finished
#PS+Cross = exec echo '$name'
#
## Execute a command in the background
#PS+Triangle = exec-background sh -c 'echo "disconnect $device_addr" | bluetoothctl'

